language: cpp
dist: xenial

matrix:
  include:
    - name: Build x86_64 AppImage on CentOS 6
      services:
        - docker
      env: ARCH=x86_64 BUILD_TYPE=centos6
      script: travis/build-centos6-docker.sh
      after_success:
        - ls -lh
        # make sure only pushes to rewrite create a new release, otherwise pretend PR and upload to transfer.sh
        - if [ "$TRAVIS_TAG" != "$TRAVIS_BRANCH" ] && [ "$TRAVIS_BRANCH" != "master" ]; then export TRAVIS_EVENT_TYPE=pull_request; fi
        - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
        - bash upload.sh linuxdeploy*.AppImage*

    - name: Build i386 AppImage on CentOS 6
      services:
        - docker
      env: ARCH=i386 BUILD_TYPE=centos6
      script: travis/build-centos6-docker.sh
      after_success:
        - ls -lh
        # make sure only pushes to rewrite create a new release, otherwise pretend PR and upload to transfer.sh
        - if [ "$TRAVIS_TAG" != "$TRAVIS_BRANCH" ] && [ "$TRAVIS_BRANCH" != "master" ]; then export TRAVIS_EVENT_TYPE=pull_request; fi
        - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
        - bash upload.sh linuxdeploy*.AppImage*

    # TODO: build and test on i386 as well!
    - name: Build and test on Ubuntu xenial (no binaries uploaded)
      dist: xenial
      sudo: required
      env: ARCH=x86_64 BUILD_TYPE=test
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:beineri/opt-qt-5.12.3-xenial'
          packages:
            - libmagic-dev
            - libjpeg-dev
            - libpng-dev
            - cimg-dev
            - automake  # required for patchelf
            - gcc
            - g++
            # Packages below are only required by the test srcipt
            - qt512-meta-minimal
            - qt512declarative
            - qt512webengine
            - mesa-common-dev
            - libgl1-mesa-dev  # <-- that's for xenial to provide the x86_64-linux-gnu/libGL.so symlink
            - # libglvnd-dev  # <-- that's for bionic to provide aforementioned symlink
      install:
        - git clone https://github.com/NixOS/patchelf.git -b 0.8
        - cd patchelf
        - ./bootstrap.sh
        - if [ "$ARCH" == "i386" ]; then export EXTRA_CONFIGURE_ARGS=("--build=i686-pc-linux-gnu" "CFLAGS=-m32" "CXXFLAGS=-m32" "LDFLAGS=-m32"); fi
        - ./configure --prefix=/usr "${EXTRA_CONFIGURE_ARGS[@]}"
        - make -j$(nproc)
        - sudo make install
        - cd ..
        - rm -rf patchelf
      script:
        - bash -xe travis/build.sh
        - bash -xe travis/test.sh linuxdeploy-plugin-qt-"$ARCH".AppImage

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)$/
